@model List<Hadis.Models.DBModels.TestAnswer>

@{
    ViewBag.Title = "Добавить ответы";
}

<h2 class="text-center">Добавить ответы на вопрос: @ViewBag.Question</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Hidden("testThemaId", (int)ViewBag.TestThemaId)
    @Html.Hidden("questionCount", (int)ViewBag.QuestionCount)
    @Html.Hidden("index", (int)ViewBag.Index)
    @Html.Hidden("answerCount", (int)ViewBag.AnswerCount)
    @Html.Hidden("testQuestionId", (int)ViewBag.TestQuestionId)

    for (int i = 0; i < (int)ViewBag.AnswerCount; i++)
    {
        @Html.Hidden("model["+i+"].TestQuestionId", (int)ViewBag.TestQuestionId)
        <hr />
        <h3>Ответ @(i+1)</h3>
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(u => u[i].Answer, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Editor("model["+i+"].Answer", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage("model["+i+"].Answer", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(u => u[i].Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Editor("model["+i+"].Description", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage("model["+i+"].Description", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(u => u[i].ShareWeight, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="number" name="model[@(i)].ShareWeight" value="1" class="form-control" />
                    @Html.ValidationMessage("model["+i+"].ShareWeight", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(u => u[i].IsCurrect, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        <input class="check-box" data-val="true" data-val-required="Требуется поле Правильный ответ." name="model[@(i)].IsCurrect" type="checkbox" value="true">
                        <input name="model[@(i)].IsCurrect" type="hidden" value="false">
                        @Html.ValidationMessage("model[" + i + "].IsCurrect", "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Сохранить" class="btn btn-default" />
        </div>
    </div>
}
